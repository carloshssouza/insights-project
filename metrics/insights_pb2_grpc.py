# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import insights_pb2 as insights__pb2


class MetricsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMetrics = channel.unary_unary(
                '/Metrics/GetMetrics',
                request_serializer=insights__pb2.MetricsRequest.SerializeToString,
                response_deserializer=insights__pb2.MetricsResponse.FromString,
                )
        self.GetPortfolioMetrics = channel.unary_unary(
                '/Metrics/GetPortfolioMetrics',
                request_serializer=insights__pb2.PortfolioRequest.SerializeToString,
                response_deserializer=insights__pb2.PortfolioResponse.FromString,
                )


class MetricsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetMetrics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPortfolioMetrics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MetricsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetrics,
                    request_deserializer=insights__pb2.MetricsRequest.FromString,
                    response_serializer=insights__pb2.MetricsResponse.SerializeToString,
            ),
            'GetPortfolioMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPortfolioMetrics,
                    request_deserializer=insights__pb2.PortfolioRequest.FromString,
                    response_serializer=insights__pb2.PortfolioResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Metrics', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Metrics(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Metrics/GetMetrics',
            insights__pb2.MetricsRequest.SerializeToString,
            insights__pb2.MetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPortfolioMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Metrics/GetPortfolioMetrics',
            insights__pb2.PortfolioRequest.SerializeToString,
            insights__pb2.PortfolioResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class InfoStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetInfo = channel.unary_unary(
                '/Info/GetInfo',
                request_serializer=insights__pb2.InfoRequest.SerializeToString,
                response_deserializer=insights__pb2.InfoResponse.FromString,
                )
        self.GetPrices = channel.unary_unary(
                '/Info/GetPrices',
                request_serializer=insights__pb2.PricesRequest.SerializeToString,
                response_deserializer=insights__pb2.RawPriceResponse.FromString,
                )


class InfoServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPrices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InfoServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInfo,
                    request_deserializer=insights__pb2.InfoRequest.FromString,
                    response_serializer=insights__pb2.InfoResponse.SerializeToString,
            ),
            'GetPrices': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPrices,
                    request_deserializer=insights__pb2.PricesRequest.FromString,
                    response_serializer=insights__pb2.RawPriceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Info', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Info(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Info/GetInfo',
            insights__pb2.InfoRequest.SerializeToString,
            insights__pb2.InfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPrices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Info/GetPrices',
            insights__pb2.PricesRequest.SerializeToString,
            insights__pb2.RawPriceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
